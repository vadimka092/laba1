'''
Задание состоит из двух частей. 
1 часть – написать программу в соответствии со своим вариантом задания. Написать 2 варианта формирования (алгоритмический и с помощью функций Питона), сравнив по времени их выполнение.
2 часть – усложнить написанную программу, введя по своему усмотрению в условие минимум одно ограничение на характеристики объектов (которое будет сокращать количество переборов)  и целевую функцию для нахождения оптимального  решения.
Вариант 30. Вводятся К цифр. Составьте все возможные целые числа из этих цифр. Каждая цифра используется только 1 раз.
Требуется для своего варианта второй части л.р. №6 (усложненной программы) разработать реализацию с использованием графического интерфейса. Допускается использовать любую графическую библиотеку питона.  
Рекомендуется использовать внутреннюю библиотеку питона  tkinter.
В программе должны быть реализованы минимум одно окно ввода, одно окно вывода (со скролингом), одно текстовое поле, одна кнопка.
'''

import itertools
import time
from tkinter import Tk, Entry, Button, Label, Text, Scrollbar

def generate_integers(digits, S):
    digits_str = ''.join(digits)
    permutations = list(itertools.permutations(digits_str))
    valid_permutations = [permutation for permutation in permutations if sum(int(digit) for digit in permutation) >= S]
    integers = [int(''.join(permutation)) for permutation in valid_permutations]
    return integers

def calculate_and_display():
    K = int(entry_K.get())
    digits = [entry_digits[i].get() for i in range(K)]
    S = int(entry_S.get())

    start_time = time.time()
    integers = generate_integers(digits, S)
    end_time = time.time()

    result_text = f"Все возможные целые числа:\n{integers}\nВремя выполнения: {end_time - start_time:.6f} секунд\nМаксимальное целое число: {max(integers)}"
    output_text.config(state='normal')
    output_text.delete('1.0', 'end')
    output_text.insert('end', result_text)
    output_text.config(state='disabled')

# Создание главного окна
root = Tk()
root.title("Генерация чисел")

# Поля ввода
Label(root, text="Введите количество цифр:").grid(row=0, column=0)
entry_K = Entry(root)
entry_K.grid(row=0, column=1)

Label(root, text="Введите цифры:").grid(row=1, column=0)
entry_digits = []
for i in range(9):  # Максимум 9 цифр
    entry_digits.append(Entry(root))
    entry_digits[i].grid(row=1, column=i+1)

Label(root, text="Введите минимальную сумму цифр:").grid(row=2, column=0)
entry_S = Entry(root)
entry_S.grid(row=2, column=1)

# Кнопка вычисления
Button(root, text="Вычислить", command=calculate_and_display).grid(row=3, column=0, columnspan=2)

# Поле вывода результатов
output_text = Text(root, height=10, width=50)
output_text.grid(row=4, column=0, columnspan=10)
output_text.config(state='disabled')

# Скроллбар для текстового поля
scrollbar = Scrollbar(root)
scrollbar.grid(row=4, column=10, sticky='ns')
scrollbar.config(command=output_text.yview)
output_text.config(yscrollcommand=scrollbar.set)

root.mainloop()
